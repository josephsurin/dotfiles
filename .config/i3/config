# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $term alacritty

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
bindsym $mod+d exec --no-startup-id rofi -show

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# or , and .
bindsym $mod+less focus left
bindsym $mod+greater focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+s split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+d layout stacking
bindsym $mod+y layout tabbed
bindsym $mod+t layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Control+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child 
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1. "
set $ws2 "2. "
set $ws3 "3. "
set $ws4 "4. "
set $ws5 "5. "
set $ws6 "6. "
set $ws7 "7. "
set $ws8 "8. "
set $ws9 "9. "
set $ws10 "10. "
set $wss "11. "

# switch to workspace
bindsym $mod+1 workspace $ws1
workspace $ws1 output VGA-0
bindsym $mod+2 workspace $ws2
workspace $ws2 output DVI-D-0
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
workspace $wss output VGA-0
bindsym $mod+u workspace $wss
bindsym $mod+Shift+Left workspace prev
bindsym $mod+Shift+Right workspace next
bindsym $mod+Mod1+h workspace prev
bindsym $mod+Mod1+l workspace next
bindsym $mod+Tab workspace back_and_forth

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10
bindsym $mod+Shift+u move container to workspace $wss
bindsym $mod+Shift+less move container to output left; focus left
bindsym $mod+Shift+greater move container to output right; focus right

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# set $grey #494949
# set $mgrey #909498
# set $lgrey #e5e5e5
set $grey #797979
set $mgrey #909498
set $lgrey #bd93f9

# Basic color configuration using the Base16 variables for windows and borders.
# Property Name         Border  BG      Text    Indicator Child Border
client.focused          $lgrey  $lgrey  $lgrey  $mgrey  $lgrey
client.unfocused        $grey   $grey   $grey   $grey   $grey

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym l resize shrink width 10 px or 10 ppt
        bindsym Shift+l resize shrink width 1 px or 1 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym Shift+k resize grow height 1 px or 1 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym Shift+j resize shrink height 1 px or 1 ppt
        bindsym h resize grow width 10 px or 10 ppt
        bindsym Shift+h resize grow width 1 px or 1 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

set $powermenutitle "(M)onitor, (L)ock, (E)xit, (R)eboot, (S)uspend, Poweroff (D)"

mode $powermenutitle  {
	bindsym Escape mode "default"
    bindsym M exec --no-startup-id xset dpms force off
	bindsym L exec --no-startup-id i3-msg mode "default" && betterlockscreen -l dimblur
	bindsym E exec i3-msg exit
	bindsym R mode "press Enter to reboot"
	bindsym S exec --no-startup-id systemctl suspend 
	bindsym D mode "press Enter to poweroff"
}
mode "press Enter to reboot" {
	bindsym Escape mode "default"
	bindsym Return exec reboot
}
mode "press Enter to poweroff" {
	bindsym Escape mode "default"
	bindsym Return exec poweroff
}
bindsym $mod+Shift+S mode $powermenutitle

# program shortcuts
bindsym $mod+Shift+f exec --no-startup-id firefox
bindsym $mod+e exec --no-startup-id $term -e "ranger"
bindsym $mod+p exec --no-startup-id $term -e "python"
bindsym $mod+c exec ~/.config/scripts/stickers.sh

# screenshot commands
bindsym --release Ctrl+Shift+4 exec ~/.config/scripts/region_capture.sh 
bindsym --release Ctrl+Shift+1 exec ~/.config/scripts/screen_capture.sh

# wallpaper switching commands
bindsym  $mod+w exec ~/.config/scripts/walswitch.sh
bindsym  $mod+Shift+w exec ~/.config/scripts/walswitch.sh -r

# pulseaudio commands
bindcode 121 exec --no-startup-id pulseaudio-ctl mute
bindcode 122 exec --no-startup-id pulseaudio-ctl down 5
bindcode 123 exec --no-startup-id pulseaudio-ctl up 5
bindcode 68 exec --no-startup-id pulseaudio-ctl mute
bindcode 69 exec --no-startup-id pulseaudio-ctl down 5
bindcode 70 exec --no-startup-id pulseaudio-ctl up 5

# cmus commands
bindsym Ctrl+Shift+e exec --no-startup-id cmus-remote -u
bindsym Ctrl+q exec --no-startup-id cmus-remote -n
bindsym Ctrl+Shift+q exec --no-startup-id cmus-remote -r

for_window [class="^.*"] border pixel 1

gaps inner 0
gaps outer 0

smart_gaps on

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

#keyboard cursor!
bindsym $mod+m mode "$mouse"
mode "$mouse" {
	bindsym Escape mode "default"
	bindsym $mod+m mode "default"
	bindsym p mode "default"
	bindsym semicolon mode "default"

	bindsym Shift+h exec --no-startup-id xdotool mousemove_relative -- -10 0
	bindsym h exec --no-startup-id xdotool mousemove_relative -- -100 0
	bindsym Shift+j exec --no-startup-id xdotool mousemove_relative 0 10
	bindsym j exec --no-startup-id xdotool mousemove_relative 0 100
	bindsym Shift+k exec --no-startup-id xdotool mousemove_relative -- 0 -10
	bindsym k exec --no-startup-id xdotool mousemove_relative -- 0 -100
	bindsym Shift+l exec --no-startup-id xdotool mousemove_relative 10 0
	bindsym l exec --no-startup-id xdotool mousemove_relative 100 0
	bindsym u exec --no-startup-id xdotool click 1
	bindsym i exec --no-startup-id xdotool click 2
	bindsym o exec --no-startup-id xdotool click 3
	bindsym Shift+m exec --no-startup-id xdotool click --clearmodifiers 4
	bindsym m exec --no-startup-id xdotool click --repeat 15 --delay 0 4
	bindsym Shift+n exec --no-startup-id xdotool click --clearmodifiers 5
	bindsym n exec --no-startup-id xdotool click --repeat 15 --delay 0 5
}

for_window [title=" - AzPainter$"] border none
for_window [title="^stickers$"] floating enable
assign [title="^stickers$"] $ws2
assign [class="discord"] $ws2
assign [class="telegram-desktop"] $ws2
assign [class="cmus"] $ws1
assign [class="krita"] $wss
assign [class="Anki"] $ws9
assign [class="calcurse"] $ws10
exec --no-startup-id $HOME/.config/scripts/startup.sh

exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec --no-startup-id nm-applet
exec --no-startup-id udiskie --smart-tray
exec_always --no-startup-id dunst
exec_always --no-startup-id compton
exec --no-startup-id $HOME/.config/scripts/walswitch.sh -w bloodmoon-ruins.jpg
exec --no-startup-id ibus-daemon -drx
